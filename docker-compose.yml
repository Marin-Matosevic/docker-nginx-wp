version: '3.9'
services:

  # redis:
  #   container_name: ${APP_NAME}-redis
  #   image: redis
  #   restart: always
  #   ports:
  #     - 6379:6379
  #   networks:
  #     - webnet  

  nginx:
    container_name: ${APP_NAME}-nginx
    image: nginx:${NGINX_VERSION}    
    ports:
      - 80:80
      - 443:443
    volumes:
      - ./config/nginx.conf:/tmp/default.template
      - ./certs:/etc/certs
      - wp_data:/var/www/html:rw,cached
      - ./www:/var/www/html/wp-content
    depends_on:
      - wordpress  
    restart: always
    entrypoint: /bin/bash -c 'cat /tmp/default.template | sed "s/\\\$$domain/${DOMAIN}/g" > /etc/nginx/conf.d/default.conf && nginx -g "daemon off;"'    
    networks:
      webnet:
        aliases:
          - ${DOMAIN}             

  wordpress:
    container_name: ${APP_NAME}-wordpress
    #image: wordpress:${WORDPRESS_VERSION}   
    build:
      context: .
      dockerfile: Dockerfile
    volumes:
      - ./config/php.ini:/usr/local/etc/php/conf.d/php.ini
      - wp_data:/var/www/html:rw,cached
      - ./www:/var/www/html/wp-content
    depends_on:
      - mysql
    restart: always
    environment:
      WORDPRESS_DB_NAME: ${DB_NAME}
      WORDPRESS_TABLE_PREFIX: ${DB_TABLE_PREFIX}
      WORDPRESS_DB_HOST: ${DB_HOST}
      WORDPRESS_DB_USER: ${DB_USER}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD}
      WORDPRESS_DEBUG: 1
      WORDPRESS_CONFIG_EXTRA: |
          define('WP_MEMORY_LIMIT', '1024M');
          define('WP_MAX_MEMORY_LIMIT', '1024M');
          //define('WP_DEBUG', true);
          define('WP_DEBUG_LOG', true);
          define('WP_DEBUG_DISPLAY', false);
          //define( 'WP_REDIS_HOST', 'redis' );
          //define( 'WP_REDIS_PORT', 6379 );          
    networks:
      - webnet
    extra_hosts:
      - "${DOMAIN}:${IP}"       

  mysql:
    container_name: ${APP_NAME}-mysql
    image: mariadb:${MARIADB_VERSION}    
    volumes:
      - ./db_data:/var/lib/mysql
      - ./config/db.cnf:/etc/mysql/conf.d/db.cnf
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_ROOT_PASSWORD}
      MYSQL_USER: ${DB_USER}
      MYSQL_PASSWORD: ${DB_PASSWORD}
      MYSQL_DATABASE: ${DB_NAME}
    restart: always
    ports:
      - 3306:3306
    networks:
      - webnet     

  #RUN: alias wp="docker-compose run --rm wpcli"
  wpcli:
    container_name: ${APP_NAME}-wpcli
    image: wordpress:cli
    volumes:
      - ./config/php.ini:/usr/local/etc/php/conf.d/conf.ini
      - wp_data:/var/www/html
      - ./www:/var/www/html/wp-content
    environment:
      WORDPRESS_DB_HOST: ${DB_HOST}
      WORDPRESS_DB_NAME: ${DB_NAME}
      WORDPRESS_DB_USER: ${DB_USER}
      WORDPRESS_DB_PASSWORD: ${DB_PASSWORD}
    depends_on:
      - mysql
      - wordpress
    networks:
      - webnet   

  # http://127.0.0.1:8080/
  phpmyadmin:
    container_name: ${APP_NAME}-phpmyadmin
    image: phpmyadmin/phpmyadmin    
    volumes:
      - ./config/phpmyadmin.ini:/usr/local/etc/php/conf.d/phpmyadmin.ini
    environment:
      PMA_HOST: '${DB_HOST}'
      PMA_PORT: 3306
      MYSQL_ROOT_PASSWORD: '${DB_ROOT_PASSWORD}'
    ports:
      - 8080:80
    links:
      - mysql:mysql
    networks:
      - webnet  

  mailhog:
    container_name: ${APP_NAME}-mailhog
    image: mailhog/mailhog
    ports:
      - 1025:1025 # smtp server
      - 8025:8025 # web ui
    networks:
      - webnet    

networks:
  webnet:
    external: true
    driver: bridge

volumes:
  db_data: {}
  wp_data: {}
